//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace OTISCZ.Baan.InvoicePrintService.WsOtMail {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OtWsMailSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class OtWsMail : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailByteAttachementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailByteAttachementsBccOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OtWsMail() {
            this.Url = global::OTISCZ.Baan.InvoicePrintService.Properties.Settings.Default.OTISCZ_Baan_InvoicePrintService_WsOtMail_OtWsMail;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;
        
        /// <remarks/>
        public event SendMailByteAttachementsCompletedEventHandler SendMailByteAttachementsCompleted;
        
        /// <remarks/>
        public event SendMailByteAttachementsBccCompletedEventHandler SendMailByteAttachementsBccCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMail(string from, string to, string cc, string subject, string body, string[] attachementsPaths, int iMailPriority) {
            this.Invoke("SendMail", new object[] {
                        from,
                        to,
                        cc,
                        subject,
                        body,
                        attachementsPaths,
                        iMailPriority});
        }
        
        /// <remarks/>
        public void SendMailAsync(string from, string to, string cc, string subject, string body, string[] attachementsPaths, int iMailPriority) {
            this.SendMailAsync(from, to, cc, subject, body, attachementsPaths, iMailPriority, null);
        }
        
        /// <remarks/>
        public void SendMailAsync(string from, string to, string cc, string subject, string body, string[] attachementsPaths, int iMailPriority, object userState) {
            if ((this.SendMailOperationCompleted == null)) {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                        from,
                        to,
                        cc,
                        subject,
                        body,
                        attachementsPaths,
                        iMailPriority}, this.SendMailOperationCompleted, userState);
        }
        
        private void OnSendMailOperationCompleted(object arg) {
            if ((this.SendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailByteAttachements", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMailByteAttachements(string from, string to, string cc, string subject, string body, object[] attList, string[] fileNames, int iMailPriority) {
            this.Invoke("SendMailByteAttachements", new object[] {
                        from,
                        to,
                        cc,
                        subject,
                        body,
                        attList,
                        fileNames,
                        iMailPriority});
        }
        
        /// <remarks/>
        public void SendMailByteAttachementsAsync(string from, string to, string cc, string subject, string body, object[] attList, string[] fileNames, int iMailPriority) {
            this.SendMailByteAttachementsAsync(from, to, cc, subject, body, attList, fileNames, iMailPriority, null);
        }
        
        /// <remarks/>
        public void SendMailByteAttachementsAsync(string from, string to, string cc, string subject, string body, object[] attList, string[] fileNames, int iMailPriority, object userState) {
            if ((this.SendMailByteAttachementsOperationCompleted == null)) {
                this.SendMailByteAttachementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailByteAttachementsOperationCompleted);
            }
            this.InvokeAsync("SendMailByteAttachements", new object[] {
                        from,
                        to,
                        cc,
                        subject,
                        body,
                        attList,
                        fileNames,
                        iMailPriority}, this.SendMailByteAttachementsOperationCompleted, userState);
        }
        
        private void OnSendMailByteAttachementsOperationCompleted(object arg) {
            if ((this.SendMailByteAttachementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailByteAttachementsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailByteAttachementsBcc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMailByteAttachementsBcc(string from, string to, string cc, string bcc, string subject, string body, object[] attList, string[] fileNames, int iMailPriority) {
            this.Invoke("SendMailByteAttachementsBcc", new object[] {
                        from,
                        to,
                        cc,
                        bcc,
                        subject,
                        body,
                        attList,
                        fileNames,
                        iMailPriority});
        }
        
        /// <remarks/>
        public void SendMailByteAttachementsBccAsync(string from, string to, string cc, string bcc, string subject, string body, object[] attList, string[] fileNames, int iMailPriority) {
            this.SendMailByteAttachementsBccAsync(from, to, cc, bcc, subject, body, attList, fileNames, iMailPriority, null);
        }
        
        /// <remarks/>
        public void SendMailByteAttachementsBccAsync(string from, string to, string cc, string bcc, string subject, string body, object[] attList, string[] fileNames, int iMailPriority, object userState) {
            if ((this.SendMailByteAttachementsBccOperationCompleted == null)) {
                this.SendMailByteAttachementsBccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailByteAttachementsBccOperationCompleted);
            }
            this.InvokeAsync("SendMailByteAttachementsBcc", new object[] {
                        from,
                        to,
                        cc,
                        bcc,
                        subject,
                        body,
                        attList,
                        fileNames,
                        iMailPriority}, this.SendMailByteAttachementsBccOperationCompleted, userState);
        }
        
        private void OnSendMailByteAttachementsBccOperationCompleted(object arg) {
            if ((this.SendMailByteAttachementsBccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailByteAttachementsBccCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendMailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendMailByteAttachementsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendMailByteAttachementsBccCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591